<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>381</string>
	<key>AMApplicationVersion</key>
	<string>2.4</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>-- Works with Mountain Lion and Mavericks -- http://lawrenceting.tk/-- Last Updated on 21 February 2014on run	tell application "System Events" to set (startup_Disk) to (name of startup disk)		set cleanList to {}	set allVolumes to (list disks)	set itemsToDelete to {startup_Disk, "home", "net"}		repeat with i from 1 to count allVolumes		if {allVolumes's item i} is not in (itemsToDelete) then set cleanList's end to allVolumes's item i	end repeat		if cleanList is not {} then				set cleanList_string to literalList from cleanList				set a to "activate"		set b to "choose from list " &amp; cleanList_string &amp; " with title \"⏏  Eject All Disks\" with prompt \"Disks:\" cancel button name \"Cancel\" OK button name \"Ejecting...\" default items {item 1 of " &amp; cleanList_string &amp; "} with multiple selections allowed"				do shell script "osascript -e " &amp; quoted form of a &amp; " -e " &amp; quoted form of b &amp; "  &gt; /dev/null 2&gt;&amp;1 &amp;"				repeat with i from 1 to the count of allVolumes			try				tell application "Finder" to eject (item i of allVolumes)			on error				try					tell application "Finder" to eject allVolumes					exit repeat				on error					try						tell application "Finder" to eject (every disk)						exit repeat					end try				end try			end try		end repeat				try			tell application "System Events" to tell process "osascript"								repeat until (window "⏏  Eject All Disks" exists)				end repeat								repeat until (window "⏏  Eject All Disks" exists) is false					click button "Ejecting..." of window "⏏  Eject All Disks"				end repeat			end tell		end try			else if cleanList is {} then		activate		display dialog "No disk to eject." giving up after 1	end ifend run---------------------------------------------------------------------------------------------------(* Covert List to String *)---------------------------------------------------------------------------------------------------on literalList from someList	if class of someList is not list then		error "'literalList' requires a list" number -1703	else		set q to "\"" --"\""		set outList to {"{"}		set listLength to length of someList		repeat with i from 1 to listLength			set thisItem to item i of someList			set itemClass to class of thisItem			if itemClass is string then				set end of outList to q &amp; thisItem &amp; q			else if itemClass is alias then				set end of outList to "alias " &amp; q &amp; (thisItem as string) &amp; q			else if itemClass is list then				set end of outList to literalList from thisItem			else				set end of outList to (thisItem as string)			end if			if (i &lt; listLength) then set the end of outList to ", "		end repeat		set end of outList to "}"		set oT to AppleScript's text item delimiters		set AppleScript's text item delimiters to ""		set litList to outList as string		set AppleScript's text item delimiters to oT		return litList	end ifend literalList</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>B65A254E-1997-4C8A-8214-06E2E53B3990</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>6F010A67-CA79-4351-8CCF-05DB6F381015</string>
				<key>UUID</key>
				<string>B426D399-110F-4357-B56D-41A0BBCA7883</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>353.000000:944.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}	killApp("WorkflowServiceRunner")end runon killApp(badapp)	do shell script "ps ax | grep -i " &amp; quoted form of badapp &amp; " | grep -v grep | cut -c 1-6"	set pNum to result	try		do shell script "kill -9 " &amp; pNum	end tryend killApp</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>IgnoresInput</key>
				<true/>
				<key>InputUUID</key>
				<string>E27911F2-8009-4BA1-B7A9-44E9C2DDD287</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>A7AA7034-5D7A-41D8-8782-74C99484B465</string>
				<key>UUID</key>
				<string>EE936EEE-1930-4433-9C49-14E7027037E5</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>353.000000:333.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict>
		<key>B4026CDF-9505-4638-86C3-5C0844EC6420</key>
		<dict>
			<key>from</key>
			<string>B426D399-110F-4357-B56D-41A0BBCA7883 - B426D399-110F-4357-B56D-41A0BBCA7883</string>
			<key>to</key>
			<string>EE936EEE-1930-4433-9C49-14E7027037E5 - EE936EEE-1930-4433-9C49-14E7027037E5</string>
		</dict>
	</dict>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceApplicationBundleID</key>
		<string>com.apple.finder</string>
		<key>serviceApplicationPath</key>
		<string>/System/Library/CoreServices/Finder.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
