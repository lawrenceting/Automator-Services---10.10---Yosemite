<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>419</string>
	<key>AMApplicationVersion</key>
	<string>2.6</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>--modified from https://github.com/codez/ImportPhotoFolders--last updated 15/12/2015on run --{input, parameters}	activate	set folderList to (choose folder with multiple selections allowed)	activate application "Photos"		repeat with baseFolder in folderList		_importEachSubFolder(baseFolder, null)	end repeatend run---------------------------------------------------------------------------------------------on _importEachSubFolder(aFolder, parentFolder)	tell application "Finder"		set albumName to (name of aFolder as text) --set album name to folder name		set subFolders to every folder of aFolder --get sub folders of folder	end tell		if (count of subFolders) &gt; 0 then		set fotoFolder to _createFotoFolder(aFolder, albumName, parentFolder)		displayDialog("Created new folder named '" &amp; albumName &amp; "'")				repeat with eachFolder in subFolders			_importEachSubFolder(eachFolder, fotoFolder)		end repeat	else		set fotoFolder to parentFolder	end if		_importFotos(aFolder, albumName, fotoFolder)end _importEachSubFolder---------------------------------------------------------------------------------------------on _importFotos(aFolder, albumName, parentFolder)	set imageList to _getImageList(aFolder)	if imageList is {} then return		set fotoAlbum to _createFotoAlbum(albumName, parentFolder)		if parentFolder is not null then		tell application "Photos" to set folderName to name of parentFolder		displayDialog("Created new album named '" &amp; albumName &amp; "' at folder " &amp; "'" &amp; folderName &amp; "'")	else		displayDialog("Created new album named '" &amp; albumName &amp; "'")	end if		tell application "Photos"		with timeout of 600 seconds			import imageList into fotoAlbum skip check duplicates yes		end timeout	end tell		displayDialog("Imported " &amp; (count of imageList) &amp; " photos.")end _importFotos---------------------------------------------------------------------------------------------on _createFotoFolder(aFolder, folderName, parentFolder)	tell application "Photos"		if parentFolder is null then			make new folder named folderName		else			make new folder named folderName at parentFolder		end if	end tellend _createFotoFolder---------------------------------------------------------------------------------------------on _createFotoAlbum(albumName, parentFolder)	tell application "Photos"		if parentFolder is null then			make new album named albumName		else			make new album named albumName at parentFolder		end if	end tellend _createFotoAlbum---------------------------------------------------------------------------------------------on _getImageList(aFolder)	set extensionsList to {"jpg", "png", "tiff", "JPG", "jpeg", "gif", "JPEG", "PNG", "TIFF", "GIF", "MOV", "mov", "MP4", "mp4"}	tell application "Finder" to set theFiles to every file of aFolder whose name extension is in extensionsList		set imageList to {}	repeat with i from 1 to number of items in theFiles		set thisItem to item i of theFiles as alias		set the end of imageList to thisItem	end repeat		imageListend _getImageList---------------------------------------------------------------------------------------------on displayDialog(msg)	set a to "activate (display dialog \"" &amp; msg &amp; "\" ¬	with title \"Photos\" ¬	with icon file \"Macintosh HD:Applications:Photos.app:Contents:Resources:AppIcon.icns\" ¬	buttons {\"Importing...\"} ¬	giving up after 1)"		do shell script "osascript -e " &amp; quoted form of a &amp; " &gt; /dev/null 2&gt;&amp;1 &amp;"end displayDialog</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>1C92BCA8-DB10-41EF-B517-D80D4F9FFA52</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>D830A104-7182-4483-AF79-84B934E73A9A</string>
				<key>UUID</key>
				<string>E8343ADA-2667-4ED2-ABBC-D00A4D4B864A</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>719.500000:316.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run --{input, parameters}	killApp("WorkflowServiceRunner")end runon killApp(badapp)	do shell script "ps ax | grep -i " &amp; quoted form of badapp &amp; " | grep -v grep | cut -c 1-6"	set pNum to result	try		do shell script "kill -9 " &amp; pNum	end tryend killApp</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>Disabled</key>
				<false/>
				<key>InputUUID</key>
				<string>39E0AF7A-A220-4BC3-8DC7-BC50F16327D2</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>33008F28-D995-452F-BF10-EA603B400034</string>
				<key>UUID</key>
				<string>3A15BD2B-0024-469C-B5F5-EE7CA562BE1A</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>719.500000:562.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict>
		<key>0A01BBF0-B928-44BB-A212-FA678D7DAF19</key>
		<dict>
			<key>from</key>
			<string>E8343ADA-2667-4ED2-ABBC-D00A4D4B864A - E8343ADA-2667-4ED2-ABBC-D00A4D4B864A</string>
			<key>to</key>
			<string>3A15BD2B-0024-469C-B5F5-EE7CA562BE1A - 3A15BD2B-0024-469C-B5F5-EE7CA562BE1A</string>
		</dict>
	</dict>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceApplicationBundleID</key>
		<string>com.apple.Photos</string>
		<key>serviceApplicationPath</key>
		<string>/Applications/Photos.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
