<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>346</string>
	<key>AMApplicationVersion</key>
	<string>2.3</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>-- Last Updated to work with Mountain Lion and Mavericks -- http://lawrenceting.tk/-- Last on 22 January 2014on run {input, parameters}	script o		try			set theString to the clipboard		end try				try			if theString is not "" and item 2 of theString is "	" then				if (item 1 of theString is "â€¢") or (item 1 of theString is "o") then					set theString to FindAndReplaceText of theString from ((item 1 of theString) &amp; (item 2 of theString)) to ""					--set the clipboard to theString				end if			end if		end try				--Remove unnecessary spaces		try			set theString to stripwhSpace from theString		end try				try			set theList to splitString(theString, " ")			repeat with x from 1 to count of theList				set item x of theList to trim(item x of theList)			end repeat						set theString to joinList(theList, "")		end try						try			return (theString)		end try				killApp("WorkflowServiceRunner")	end script	tell o to runend runto joinList(aList, delimiter)	script o		set retVal to ""		set prevDelimiter to AppleScript's text item delimiters		set AppleScript's text item delimiters to delimiter		set retVal to aList as string		set AppleScript's text item delimiters to prevDelimiter		return retVal	end script	tell o to runend joinListon trim(someText)	script o		repeat until someText does not start with " "			set someText to text 2 thru -1 of someText		end repeat				repeat until someText does not end with " "			set someText to text 1 thru -2 of someText		end repeat				return someText	end script	tell o to runend trimto splitString(aString, delimiter)	script o		set retVal to {}		set prevDelimiter to AppleScript's text item delimiters		log delimiter		set AppleScript's text item delimiters to {delimiter}		set retVal to every text item of aString		set AppleScript's text item delimiters to prevDelimiter		return retVal	end script	tell o to runend splitStringto stripwhSpace from aString	script o		property aList : missing value	end script		set oldDelims to AppleScript's text item delimiters	set AppleScript's text item delimiters to {" ", "    "} -- space, tab		set o's aList to aString's text items		repeat with i from 1 to (get count o's aList)		if item i of o's aList is "" then set item i of o's aList to missing value	end repeat	set aString to o's aList's text as text	set AppleScript's text item delimiters to oldDelims	return aStringend stripwhSpaceon killApp(badapp)	script o		property pNum : {}				do shell script "ps ax | grep -i " &amp; quoted form of badapp &amp; " | grep -v grep | cut -c 1-6"		set my pNum to result		try			do shell script "kill -9 " &amp; my pNum		end try	end script	tell o to runend killAppon FindAndReplaceText of t from s to r	script o		set d to text item delimiters		set text item delimiters to s		set t to t's text items		set text item delimiters to r		tell t to set t to beginning &amp; ({""} &amp; rest)		set text item delimiters to d		t	end script	tell o to runend FindAndReplaceText</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>7E9CADE8-6F57-4EF7-A55E-549FB8C87F55</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>B198991A-9B14-4471-AE89-4BC2D19E602D</string>
				<key>UUID</key>
				<string>3638B6D3-823C-4E0B-9ED0-3E5A31DC0E41</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>360.500000:551.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceApplicationBundleID</key>
		<string></string>
		<key>serviceApplicationPath</key>
		<string></string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.text</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
